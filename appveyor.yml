environment:
  RUST_BACKTRACE: 1
  # The appveyor image we use has a pretty huge set of things installed... we make the
  # initial PATH something sane so we know what to expect
  PATH: "C:\\windows\\system32;\
    C:\\windows;\
    C:\\windows\\System32\\Wbem;\
    C:\\windows\\System32\\WindowsPowerShell\\v1.0;\
    C:\\ProgramData\\chocolatey\\bin;\
    C:\\MinGW\\bin;\
    C:\\Python27;\
    C:\\Python27\\Scripts;\
    C:\\Tools\\PsTools;\
    C:\\Tools\\NuGet3;\
    C:\\Program Files\\Microsoft\\Web Platform Installer\\;\
    C:\\Program Files\\7-Zip;\
    C:\\Program Files\\Mercurial;\
    C:\\Program Files (x86)\\Subversion\\bin;\
    C:\\Program Files (x86)\\CMake\\bin;\
    C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;\
    C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;\
    C:\\Program Files\\Amazon\\AWSCLI\\;\
    C:\\Program Files\\Microsoft Windows Performance Toolkit\\;\
    C:\\Program Files\\LLVM\\bin;\
    C:\\Program Files\\Git LFS;\
    C:\\Program Files\\Git\\cmd;\
    C:\\Program Files\\Git\\usr\\bin;\
    C:\\Program Files\\AppVeyor\\BuildAgent;"
  
  matrix:
    fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
    allow_failures:
    # - platform: x86
    #   configuration: Debug #,Release
    #   - TARGET: stable-i686-pc-windows-msvc
    #   - TARGET: nightly-i686-pc-windows-msvc
    #   - TARGET: nightly-i686-pc-pc-windows-gnu
    #   - TARGET: stable-i686-pc-pc-windows-gnu
    - platform: x64
      build: Debug #,Release
      TARGET: stable-x86_64-pc-windows-msvc
      # - TARGET: stable-x86_64-pc-windows-gnu
      # - TARGET: nightly-x86_64-pc-windows-gnu

# Set cache, so qe can be fast and efficient
cache:
  - C:\\Users\\appveyor\\.rustup -> appveyor.yml
  - C:\\Users\\appveyor\\.cargo -> appveyor.yml

# Install and configure 
install:
  - ps: echo "What is my `$env:RUST_BACKTRACE ? $env:RUST_BACKTRACE"
  - ps: echo "What is my `$env:TARGET ? $env:Target"

  # Update git submodules
  - git submodule update --init --recursive
  # Install rustup, Should use i686-pc-windows-gnu triple for first install
  - ps: Start-FileDownload "https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe"
  # - ps: ./rustup-init.exe -y  --verbose --default-host stable-x86_64-pc-windows-msvc
  - ps: ./rustup-init.exe -y
  - ps: rustup set $env:TARGET
  
  # Get latest toolchain
  - rustup update
  
  # Show current version
  - rustc -V
  - cargo -V

build_script: 
  - cd imgui-examples
  - cargo test --verbose

test: off